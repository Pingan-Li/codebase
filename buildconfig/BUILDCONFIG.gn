import("//buildconfig/c++/c++.gni")
import("//buildconfig/c/c.gni")
import("//buildconfig/toolchain/toolchain.gni")

# toolchain
if (is_macos) {
  set_default_toolchain("toolchain/macos:clang")
} else if (is_linux) {
  set_default_toolchain("toolchain/linux:cxx")
} else {
  assert(false, "Unsupported platform!")
}

default_configs = [
  "//buildconfig:c",
  "//buildconfig:cxx",
  "//buildconfig:compiler",
]

assert(!(use_asan && use_tsan),
       "You cannot use ASan and TSan at the same time.")
if (use_asan) {
  default_configs += [ "//buildconfig:asan" ]
}

if (use_tsan) {
  default_configs += [ "//buildconfig:tsan" ]
}

if (use_ubsan) {
  default_configs += [ "//buildconfig:ubsan" ]
}

set_defaults("executable") {
  if (!defined(configs)) {
    configs = []
  }
  configs += default_configs
  configs += [ "//buildconfig:executable" ]
}

set_defaults("shared_library") {
  if (!defined(configs)) {
    configs = []
  }
  configs += default_configs
  configs += [ "//buildconfig:shared_library" ]
}

set_defaults("static_library") {
  if (!defined(configs)) {
    configs = []
  }
  configs += default_configs
  configs += [ "//buildconfig:static_library" ]
}
