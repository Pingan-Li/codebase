import("//buildconfig/c++/c++.gni")
import("//buildconfig/c/c.gni")
import("//buildconfig/platform/platform.gni")

declare_args() {
  # c compiler.
  compiler_c = "gcc"

  # c++ compiler.
  compiler_cxx = "g++"

  # linker.
  linker = "ld"

  # archiver
  archiver = "ar"

  # assembler.
  assembler = "asm"

  # copier.
  copier = "cp"

  # timestamper.
  timestamper = "touch"

  # change the warning level of compiler.
  warning_level = 3  # max: 3

  # emit an error rather than a warning when compiler complains.
  treat_warnings_as_errors = true

  # 0 ~ 3 are treated as O0 ~ O3 respectively.
  # optimization_level can also be a string,
  # for example, "g" stands for "-Og" and "fast" stands
  # for "-Ofast".
  optimization_level = 0

  # enable address sanitizer.
  use_asan = false

  # enable thread sanitizer.
  use_tsan = false

  # enable undefined behaviour sanitizer.
  use_ubsan = false

  # This will make all symbols hidden unless they are explicitly exported.
  use_explicit_symbol_exports = true

  # extra flags.
  extra_ldflags = []

  # enable debug info.
  enable_debug_info = true

  # If it is true, all executables are static executables.
  use_static_linking = false
}
