source_set("base_sources") {
  sources = [
    "concurrent/mutex.cc",
    "concurrent/mutex.h",
  ]
}

executable("adaptive_lock_tests") {
  sources = [
    "concurrent/lock/adaptive_lock.cc",
    "concurrent/lock/adaptive_lock_tests.cc",
  ]

  deps = [
    ":base_sources",
    "//testing:gtest",
    "//testing:gtest_main",
  ]
}

# executable("mutex_tests") {
#   sources = [ "concurrent/mutex_tests.cc" ]

#   public_deps = [
#     ":base_sources",
#     "//testing:gtest",
#     "//testing:gtest_main",
#   ]
# }

# executable("closure_tests") {
#   sources = [ "closure_tests.cc" ]

#   deps = [
#     "//testing:gtest",
#     "//testing:gtest_main",
#   ]
# }

# executable("thread_tests") {
#   sources = [ "./concurrent/thread_tests.cc" ]

#   deps = [
#     ":base_sources",
#     "//testing:gtest",
#     "//testing:gtest_main",
#   ]
# }

# executable("monitor_tests") {
#   sources = [ "./concurrent/monitor_tests.cc" ]

#   deps = [
#     ":base_sources",
#     "//testing:gtest",
#     "//testing:gtest_main",
#   ]
# }

# executable("condition_variable_tests") {
#   sources = [ "./concurrent/condition_variable_tests.cc" ]

#   deps = [
#     ":base_sources",
#     "//testing:gtest",
#     "//testing:gtest_main",
#   ]
# }

# executable("command_line_tests") {
#   sources = [ "./command_line_tests.cc" ]

#   deps = [
#     ":base_sources",
#     "//testing:gtest",
#     "//testing:gtest_main",
#   ]
# }

# executable("string_aux_tests") {
#   sources = [ "./string_aux_tests.cc" ]

#   deps = [
#     ":base_sources",
#     "//testing:gtest",
#     "//testing:gtest_main",
#   ]
# }

# executable("time_tests") {
#   sources = [ "./time_tests.cc" ]

#   deps = [
#     ":base_sources",
#     "//testing:gtest",
#     "//testing:gtest_main",
#   ]
# }

# executable("blocking_queue_tests") {
#   sources = [ "./concurrent/blocking_queue_tests.cc" ]

#   deps = [
#     ":base_sources",
#     "//testing:gtest",
#     "//testing:gtest_main",
#   ]
# }

# executable("priority_queue_tests") {
#   sources = [ "./priority_queue_tests.cc" ]

#   deps = [
#     ":base_sources",
#     "//testing:gtest",
#     "//testing:gtest_main",
#   ]
# }

# executable("hash_tests") {
#   sources = [ "./algorithm/hash_tests.cc" ]

#   deps = [
#     ":base_sources",
#     "//testing:gtest",
#     "//testing:gtest_main",
#   ]
# }

# executable("heap_tests") {
#   sources = [ "./algorithm/heap_tests.cc" ]

#   deps = [
#     ":base_sources",
#     "//testing:gtest",
#     "//testing:gtest_main",
#   ]
# }

# executable("log_tests") {
#   sources = [ "./log_tests.cc" ]

#   deps = [
#     ":base_sources",
#     "//testing:gtest",
#     "//testing:gtest_main",
#   ]
# }

# executable("find_tests") {
#   sources = [ "./algorithm/find_tests.cc" ]

#   deps = [
#     ":base_sources",
#     "//testing:gtest",
#     "//testing:gtest_main",
#   ]
# }

# executable("timestamp_tests") {
#   sources = [ "./timestamp_tests.cc" ]

#   deps = [
#     ":base_sources",
#     "//testing:gtest",
#     "//testing:gtest_main",
#   ]
# }

# executable("symbol_table_tests") {
#   sources = [ "./algorithm/symbol_table_tests.cc" ]

#   deps = [
#     ":base_sources",
#     "//testing:gtest",
#     "//testing:gtest_main",
#   ]
# }

# executable("vector_tests") {
#   sources = [ "./container/vector_tests.cc" ]

#   deps = [
#     ":base_sources",
#     "//testing:gtest",
#     "//testing:gtest_main",
#   ]

#   cflags = [
#     "-fsanitize=address",
#     "-fno-access-control",
#   ]

#   ldflags = [ "-fsanitize=address" ]
# }

# executable("array_tests") {
#   sources = [ "./container/array_tests.cc" ]

#   deps = [
#     ":base_sources",
#     "//testing:gtest",
#     "//testing:gtest_main",
#   ]
# }

# executable("spin_lock_tests") {
#   sources = [ "./concurrent/spin_lock_tests.cc" ]

#   deps = [
#     ":base_sources",
#     "//testing:gtest",
#     "//testing:gtest_main",
#   ]
# }

group("base_tests") {
  deps = [
    ":adaptive_lock_tests",
    # ":blocking_queue_tests",
    # ":closure_tests",
    # ":command_line_tests",
    # ":condition_variable_tests",
    # ":monitor_tests",
    # ":mutex_tests",
    # ":priority_queue_tests",
    # ":string_aux_tests",
    # ":thread_tests",
  ]
}
